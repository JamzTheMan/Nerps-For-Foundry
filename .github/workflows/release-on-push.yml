name: Create Release from Tag

on:
  push:
    tags:
      - v*

permissions:
  contents: write

jobs:
  release:
    name: Release pushed tag as github release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Extract tag version number without the v
        id: get-version
        run: echo "version-without-v=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"

      - name: Substitute manifest and download links for versioned ones
        id: sub_manifest_link_version
        uses: devops-actions/variable-substitution@v1.2
        with:
          files: module.json
        env:
          version: ${{ steps.get-version.outputs.version-without-v }}
          manifest: https://github.com/${{ github.repository }}/releases/latest/download/module.json
          download: https://github.com/${{ github.repository }}/releases/download/${{ steps.get-version.outputs.version-without-v }}/module.zip

      - name: Create zip with all important module stuff (skipping unwanted files)
        run: zip -r9 ./module.zip assets/ fonts/ images/ languages/ packs/ scripts/ styles/ LICENSE Changelog.md module.json

      - name: Create/Update GitHub release with json and zip files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          draft: false
          prerelease: false
          allowUpdates: true
          omitDraftDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.get-version.outputs.version-without-v }}
          name: ${{ steps.get-version.outputs.version-without-v }}
          artifacts: './module.json, ./module.zip'

#      - name: Publish to FoundryVTT
#        uses: cs96and/FoundryVTT-release-package@v1.0.2
#        if: ${{ env.PACKAGE_TOKEN }}
#        env:
#          PACKAGE_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
#        with:
#          package-token: ${{ env.PACKAGE_TOKEN }}
#          manifest-url: https://github.com/${{ github.repository }}/releases/download/${{ steps.get-version.outputs.version-without-v }}/module.json
