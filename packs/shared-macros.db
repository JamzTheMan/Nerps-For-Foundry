{"name":"Shield Warden","type":"script","author":"HtV4112V3gD3WzYc","img":"icons/equipment/shield/heater-embossed-gold.webp","scope":"global","command":"// Macro to create a Shield Warden effect on the selected token, allowing them to block\n// The stats of the shield are based on the actor who posts this macro to the chat, i.e.\n// with @Macro[UUID_GOES_HERE]{Shield Warden}\n// Written by Trent Piepho\n\n// Effect to use as template, this is the Shield spell effect\nconst EFFECT_UUID = 'Compendium.pf2e.spell-effects.Jemq5UknGdMO7b73';\n\n// Return chat message macro invoked from, if any\nfunction getMessage(event) {\n  for (p of event.path) {\n    if (p.attributes) {\n      id = p.attributes.getNamedItem('data-message-id');\n      if (id)\n        return game.messages.get(id.value);\n    }\n  }\n}\n\nasync function addEffect(actor, effect) {\n  await actor.itemTypes.effect.find(e => e.flags.core?.sourceId === effect.flags.core.sourceId)?.delete();\n  await actor.createEmbeddedDocuments(\"Item\", [effect]);\n}\n\nasync function makeShield(templateUuid, from, shield) {\n  const source = (await fromUuid(templateUuid)).toObject();\n  source.flags = mergeObject(source.flags ?? {}, { core: {sourceId: templateUuid}});\n\n  source.name = `Effect: ${shield.name} from ${from.name}`;\n  source.img = shield.icon;\n  source.system.duration.value = 0;\n  source.system.duration.expiry = 'turn-end';\n  source.system.description = `${from.name} uses Shield Warden to Shield Block for you`;\n  source.system.level.value = shield.level;\n  source.system.slug = 'effect-shield-warden';\n  \n  let rule = source.system.rules.find(r => r.path == 'system.attributes.shield');\n  rule.value.ac = 0;\n  rule.value.hp = shield.hp;\n  rule.value.itemId = shield.itemId;\n\n  rule = source.system.rules.find(r => r.path == 'system.attributes.shield.hardness');\n  rule.value = shield.hardness;\n\n  return source;\n}\n\nlet speaker = getMessage(event)?.actor;\nif (!speaker) {\n  ui.notifications.warn(\"Macro should be called from a chat card link, using your shield to test macro\");\n  speaker = actor;\n}\n\nshield = speaker.system.attributes.shield;\n\nif (shield.broken) {\n  ui.notifications.warn(`${speaker.name} has a broken shield!`);\n  return;\n}\nif (!shield.raised) {\n  ui.notifications.warn(`${speaker.name} has not raised their shield!`);\n  return;\n}\n\neffect = await makeShield(EFFECT_UUID, speaker, shield);\naddEffect(actor, effect);","ownership":{"default":0,"HtV4112V3gD3WzYc":3},"flags":{"core":{"sourceId":"Macro.UMpYJire4ojPagNt"},"cf":{"id":"temp_qx20rfr41e"}},"_stats":{"systemId":"pf2e","systemVersion":"4.6.5","coreVersion":"10.291","createdTime":1673452609746,"modifiedTime":1673453296656,"lastModifiedBy":"HtV4112V3gD3WzYc"},"folder":null,"sort":0,"_id":"3TH4hHUCb9BTRlnY"}
{"name":"Roll Secret Religion","type":"script","author":"oiPWLVPNH7xQBULr","img":"systems/pf2e/icons/deity/Desna.webp","scope":"global","command":"game.PF2EToolbox.secretSkillRoll('rel')","folder":null,"sort":0,"flags":{"exportSource":{"world":"age-of-ashes","system":"pf2e","coreVersion":"0.7.9","systemVersion":"1.10.25.2784"},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_qx20rfr41e","path":"PC Macros","color":"#0068b8"}},"_id":"5f4TMts2kOCUYVvc","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776222,"modifiedTime":1663690776222,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Hymn of Healing","type":"script","author":"oiPWLVPNH7xQBULr","img":"systems/pf2e/icons/spells/hymn-of-healing.webp","scope":"global","command":"// Uses Turn Alert module\n\n// There should be combat started and tokens selected/targeted...\nif (game.combat === null) {\n\tui.notifications.error(\"Combat is not started, this macro only works during combat.\");\n\treturn;\n}\n\nif (game.user.targets.size > 1) {\n\tui.notifications.warn(\"You can only target a single token.\");\n\treturn;\n} else if (canvas.tokens.controlled.length > 1) {\n\tui.notifications.warn(\"You can only select a single token.\");\n\treturn;\n} else if (canvas.tokens.controlled.length < 1) {\n\tui.notifications.warn(\"You must select a token that is casting the spell.\");\n\treturn;\n}\n\n// Get source and target tokens\nconst healAmount = 4;\nconst duration = 5;\nconst source = canvas.tokens.controlled[0];\nlet target;\n\nif (game.user.targets.size !== 1) {\n\ttarget = canvas.tokens.controlled[0];\n} else {\n\ttarget = game.user.targets.values().next().value;\n}\n\n// Get the combat tracker id for the targeted token...\nlet combatant_source = game.combat.data.combatants.find(it => it.tokenId == source.id);\nif (combatant_source === undefined) {\n\tui.notifications.warn(`${target.data.name} is not in combat! They must be in combat for this macro to work.`);\n\treturn;\n}\n\n// Get the combat tracker id for the targeted token...\nlet combatant_target = game.combat.data.combatants.find(it => it.tokenId == target.id);\nif (combatant_target === undefined) {\n\tui.notifications.warn(`${target.data.name} is not in combat! They must be in combat for this macro to work.`);\n\treturn;\n}\n\n// Check if actor has acted yet or not this round and set Alert to this round if they haven't\nconst currentTurn = game.combat.turn;\nconst combatantTurn = game.combat.turns.findIndex(it => it.actor.id == target.actor.id);\nlet nextRound = (combatantTurn > currentTurn) ? 0 : 1;\n\nconst fastHealing_Alert = {\n\tname: `Spell Effect: Hymn of Healing - Fast Healing ${healAmount}`,\n\tlabel: `Spell Effect: Hymn of Healing - Fast Healing ${healAmount}`,\n\tturnId: combatant_target._id,\n\tround: nextRound,\n\tmessage: `Fast Healing ${healAmount} applied to ${target.data.name} from Hymn of Healing.`,\n\tmacro: \"Spell Effect: Hymn of Healing\",\n\targs: [target.id, combatant_source._id, healAmount, duration, 'applyFastHealing'],\n}\n\nconst sustainSpell_Alert = {\n\tname: \"Spell Effect: Hymn of Healing - Sustain Spell)\",\n\tlabel: \"Spell Effect: Hymn of Healing - Sustain Spell)\",\n\tturnId: combatant_source._id,\n\tendOfTurn: false,\n\tround: 1,\n\tmessage: `Temporary Hit Points removed from ${target.data.name} from Hymn of Healing. Sustaining the spell will reapply the effect.`,\n\tmacro: \"Spell Effect: Hymn of Healing\",\n\targs: [target.id, combatant_source._id, healAmount, duration, 'sustainSpell'],\n\tuserId: game.userId,\n}\n\nawait TurnAlert.create(fastHealing_Alert);\nawait TurnAlert.create(sustainSpell_Alert);\n\nNerps.addEffect(target.actor.id, \"Spell Effect: Hymn of Healing\");\n\nui.notifications.info(`${source.data.name} cast Hymn of Healing on ${target.data.name}.`);","folder":null,"sort":0,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"exportSource":{"world":"age-of-ashes","system":"pf2e","coreVersion":"0.7.9","systemVersion":"1.10.25.2784"},"cf":{"id":"temp_qx20rfr41e","path":"PC Macros","color":"#0068b8"}},"_id":"6AIWFBOQYpdrLqYR","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776225,"modifiedTime":1663690776225,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Measure Token Distances","type":"script","author":"oiPWLVPNH7xQBULr","img":"icons/tools/hand/ruler-steel-grey.webp","scope":"global","command":"var message = \"\"\nfor (var token of canvas.tokens.controlled) {\n   message += `<h3>From ${token.name}</h3>`;\n   \n   for (var target of game.user.targets) {\n       var finalDistance = token.distanceTo(target);\n       message += ` to ${target.name}: <b>${finalDistance} ft</b><br/>`\n   }\n}\n\nif (message) {\n   const whisper = args[0] ? ChatMessage.getWhisperIDs(args[0]) : undefined;\n   ChatMessage.create({content: message, whisper});\n}","folder":null,"sort":0,"flags":{"furnace":{"runAsGM":false},"combat-utility-belt":{"macroTrigger":""},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Measure Token Distances  ","colour":"#ff0000","trigger":""}},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_qx20rfr41e","path":"PC Macros","color":"#0068b8"}},"_id":"6vaZrU3P6os1DLRJ","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.1.1","coreVersion":"10.286","createdTime":1663690776226,"modifiedTime":1663802026407,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Skill Check vs DC","type":"script","author":"oiPWLVPNH7xQBULr","img":"icons/svg/dice-target.svg","scope":"global","command":"if (!actor) {\n  ui.notifications.warn(\"You must have an actor selected\");\n} else {\n\n  game.pf2e.Check.roll(\n    new game.pf2e.CheckModifier(\n      `<b>Passive Perception</b>`,\n      token.actor.data.data.attributes.perception),\n      { actor: token.actor, type: 'perception', dc: {value: 25} }, //for DC insert: , dc: {value: 30}\n      event\n      //for callback: ,(Roll) => {console.log(Roll);}\n  );\n}","folder":null,"sort":0,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_5lpecs4iq07","path":"Under Construction","color":"#e68600"}},"_id":"7STMzn2JQtwr0y3x","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776227,"modifiedTime":1663690776227,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Export Actor with embedded images","type":"script","author":"oiPWLVPNH7xQBULr","img":"systems/pf2e/icons/default-icons/mystery-man.svg","scope":"global","command":"// Convert token and portrait images to base64 for easier export/import to other servers\n\nif (!actor && canvas.tokens.controlled.length != 1) {\n\tui.notifications.warn(\"You must have a single actor selected.\");\n\treturn;\n}\n\nfunction toDataURL(src, callback, outputFormat) {\n\tlet image = new Image();\n\timage.crossOrigin = 'Anonymous';\n\timage.onload = function () {\n\t\tlet canvas = document.createElement('canvas');\n\t\tlet ctx = canvas.getContext('2d');\n\t\tlet dataURL;\n\t\tcanvas.height = this.naturalHeight;\n\t\tcanvas.width = this.naturalWidth;\n\t\tctx.drawImage(this, 0, 0);\n\t\tdataURL = canvas.toDataURL(outputFormat, 0.7);\n\t\t// console.log('base64 encoded:', dataURL);\n\n\t\t// Foundry refuses to accept webp as a valid file extension when using base64 even though it supports webp normally...\n\t\t// So we hack it by changing the image type to png but leaving the data as webp which works for now\n\t\tdataURL = dataURL.replace(\"data:image/webp\", \"data:image/png\");\n\t\tcallback(dataURL);\n\t};\n\n\timage.src = src;\n\tif (image.complete || image.complete === undefined) {\n\t\timage.src = \"data:image/gif;base64, R0lGODlhAQABAIAAAAAAAP///ywAAAAAAQABAAACAUwAOw==\";\n\t\timage.src = src;\n\t}\n}\n\ntoDataURL(actor.img,\n\tasync function (dataUrl) {\n\t\tconst portraitImage = dataUrl;\n\n\t\ttoDataURL(actor.data.token.img,\n\t\t\tasync function (dataUrl) {\n\t\t\t\tconst tokenImage = dataUrl;\n\n\t\t\t\t// Deep clone so we leave the original actor with image references...\n\t\t\t\tvar newActor = JSON.parse(JSON.stringify(actor));\n\n\t\t\t\tnewActor.name = `${actor.name}`;\n\t\t\t\tnewActor.img = portraitImage;\n\t\t\t\tnewActor.token.img = tokenImage;\n\n\t\t\t\tlet actorClone = await Actor.create(newActor);\n\n\t\t\t\tactorClone.exportToJSON();\n\t\t\t\tactorClone.delete();\n\t\t\t}\n\t\t\t, \"image/webp\")\n\t}\n\t, \"image/webp\")","folder":null,"sort":0,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_qx20rfr41e","path":"Macros","color":"#000000"}},"_id":"80MTSdYXp9gNyh8R","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776228,"modifiedTime":1663690776228,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Add Hero Point","type":"script","author":"oiPWLVPNH7xQBULr","img":"icons/svg/up.svg","scope":"global","command":"// Add Hero Points to selected tokens, if possible. \r\n\r\n// by JackRandom \r\n\r\n \r\n\r\nlet selectedtokens = canvas.tokens.controlled; \r\n\r\nif (selectedtokens.length < 1) { \r\n\r\n  ui.notifications.warn(\"You must select at least 1 token.\"); \r\n\r\n  return; \r\n\r\n} \r\n\r\n \r\n\r\nlet Hnames = []; \r\n\r\n \r\n\r\nfor (let t of selectedtokens) { \r\n\r\nlet hprank = t.actor.data.data.attributes.heroPoints.rank; \r\n\r\nlet hpmax = t.actor.data.data.attributes.heroPoints.max; \r\n\r\nif ((hprank < hpmax) && (t.actor.data.type = \"character\")) { \r\n\r\nlet HeroP = hprank + 1; \r\n\r\nt.actor.update({'data.attributes.heroPoints.rank': HeroP}); \r\n\r\nHnames.push(t.actor.data.name); \r\n\r\n} \r\n\r\n} \r\n\r\n \r\n\r\nif (Hnames.length < 1) { \r\n\r\nui.notifications.warn(\"No slected tokens eligible to receive hero points. (Max points or not characters.)\"); \r\n\r\n} else { \r\n\r\nChatMessage.create({user: game.user._id, content : `Hero Point(s) given to ${Hnames.join(\", \")}.`}, {}); \r\n\r\n}","folder":null,"sort":0,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_w4f9l9idxk","path":"GM Macros","color":"#940000"}},"_id":"8QtlWoC78j0MZU89","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776229,"modifiedTime":1663690776229,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"_id":"8WhFAW3e7fKeNztX","name":"Suppress Regeneration","type":"script","author":"oiPWLVPNH7xQBULr","img":"systems/pf2e/icons/spells/lock.webp","scope":"global","command":"const actors = canvas.tokens.controlled.flatMap((token) => token.actor ?? []);\nif (!actors.length && game.user.character) {\n    actors.push(game.user.character);\n}\nconst ITEM_UUID = 'Item.yFT1Elfu53UGl96P'; // Suppress Regeneration\nconst source = (await fromUuid(ITEM_UUID)).toObject();\nsource.flags.core ??= {};\nsource.flags.core.sourceId = ITEM_UUID;\nfor await (const actor of actors) {\n    const existing = actor.itemTypes.effect.find((effect) => effect.getFlag('core', 'sourceId') === ITEM_UUID);\n    if (existing) {\n        await existing.delete();\n    } else {\n        await actor.createEmbeddedDocuments('Item', [source]);\n    }\n}","folder":null,"sort":0,"flags":{"cf":{"id":"temp_w4f9l9idxk","path":"PC Macros#/CF_SEP/Jamz","color":"#940505"}},"ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776230,"modifiedTime":1663690776230,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Effect: Align Armament","type":"script","author":"oiPWLVPNH7xQBULr","img":"systems/pf2e/icons/features/classes/deific-weapon.webp","scope":"global","command":"const ITEM_UUID = 'Item.DpWiuSTK1gdiSLOL'; // Effect: Align Armament\n(async () => {\n  const effect = duplicate(await fromUuid(ITEM_UUID));\n  effect.flags.core = effect.flags.core ?? {};\n  effect.flags.core.sourceId = ITEM_UUID;\n  for await (const token of canvas.tokens.controlled) {\n    let existing = token.actor.items.find(i => i.type === 'effect' && i.data.flags.core?.sourceId === ITEM_UUID);\n    if (existing) {\n      token.actor.deleteOwnedItem(existing._id);\n    } else {\n      token.actor.createOwnedItem(effect);\n    }\n  }\n})();","folder":null,"sort":0,"flags":{"cf":{"id":"temp_9jlc9ozs6qm","path":"Effect Toggles","color":"#9900d1"}},"_id":"8v5DFZsPmOyIIYZy","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776231,"modifiedTime":1663690776231,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Roll Secret Arcana","type":"script","author":"oiPWLVPNH7xQBULr","img":"systems/pf2e/icons/deity/Nethys.webp","scope":"global","command":"game.PF2EToolbox.secretSkillRoll('arc')","folder":null,"sort":0,"flags":{"exportSource":{"world":"age-of-ashes","system":"pf2e","coreVersion":"0.7.9","systemVersion":"1.10.25.2784"},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_qx20rfr41e","path":"PC Macros","color":"#0068b8"}},"_id":"DVnriSL2cKJE7RHL","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776243,"modifiedTime":1663690776243,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Distribute Hero Points","type":"script","author":"oiPWLVPNH7xQBULr","img":"icons/svg/dice-target.svg","scope":"global","command":"// Prompt for how many to distribute\ngame.PF2EToolbox.distributeHeroPoints();\n\n// Always distribute 1 hero point\n// game.PF2EToolbox.distributeHeroPoints(1);","folder":null,"sort":0,"flags":{"core":{"sourceId":"Macro.me76zzqyykBeqOO7"},"exportSource":{"world":"age-of-ashes","system":"pf2e","coreVersion":"0.7.9","systemVersion":"1.10.25.2784"},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_w4f9l9idxk","path":"GM Macros","color":"#940000"}},"_id":"FUdlEQuHcYvwCOVX","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776245,"modifiedTime":1663690776245,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Spell Timer: Vital Beacon","type":"script","author":"oiPWLVPNH7xQBULr","img":"systems/pf2e/icons/spells/vital-beacon.webp","scope":"global","command":"const actors = canvas.tokens.controlled.flatMap((token) => token.actor ?? []);\nif (!actors.length && game.user.character) {\n\tactors.push(game.user.character);\n}\nconst ITEM_UUID = 'Item.bG2PAkV25SCTKEzv'; // Spell Timer: Vital Beacon - D4\nconst ITEM_UUID_D6 = 'Item.UyTNCJptN3yO0riF'; // Spell Timer: Vital Beacon - D6\nconst ITEM_UUID_D8 = 'Item.pYFAMlKDvJmkSLzQ'; // Spell Timer: Vital Beacon - D8\nconst ITEM_UUID_D10 = 'Item.9o2oNlwjaZ3tlCAJ'; // Spell Timer: Vital Beacon - D10\n\nconst source = (await fromUuid(ITEM_UUID)).toObject();\nsource.flags.core ??= {};\nsource.flags.core.sourceId = ITEM_UUID;\n\nconst sourceD6 = (await fromUuid(ITEM_UUID_D6)).toObject();\nsourceD6.flags.core ??= {};\nsourceD6.flags.core.sourceId = ITEM_UUID_D6;\n\nconst sourceD8 = (await fromUuid(ITEM_UUID_D8)).toObject();\nsourceD8.flags.core ??= {};\nsourceD8.flags.core.sourceId = ITEM_UUID_D8;\n\nconst sourceD10 = (await fromUuid(ITEM_UUID_D10)).toObject();\nsourceD10.flags.core ??= {};\nsourceD10.flags.core.sourceId = ITEM_UUID_D10;\n\n\nfor await (const actor of actors) {\n\tconst existing = actor.itemTypes.effect.find((effect) => effect.getFlag('core', 'sourceId') === ITEM_UUID);\n\tconst existingD6 = actor.itemTypes.effect.find((effect) => effect.getFlag('core', 'sourceId') === ITEM_UUID_D6);\n\tconst existingD8 = actor.itemTypes.effect.find((effect) => effect.getFlag('core', 'sourceId') === ITEM_UUID_D8);\n\tconst existingD10 = actor.itemTypes.effect.find((effect) => effect.getFlag('core', 'sourceId') === ITEM_UUID_D10);\n\n\tif (existing) {\n\t\tawait existing.delete();\n\t\tif (existingD6) {\n\t\t\tawait existingD6.delete();\n\t\t}\n\t\tif (existingD8) {\n\t\t\tawait existingD8.delete();\n\t\t}\n\t\tif (existingD10) {\n\t\t\tawait existingD10.delete();\n\t\t}\n\t} else {\n\t\tawait actor.createEmbeddedDocuments('Item', [sourceD10]);\n\t\tawait actor.createEmbeddedDocuments('Item', [sourceD8]);\n\t\tawait actor.createEmbeddedDocuments('Item', [sourceD6]);\n\t\tawait actor.createEmbeddedDocuments('Item', [source]);\n\t}\n}","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_9jlc9ozs6qm","path":"Effect Toggles","color":"#9900d1"}},"_id":"H4RaawEHGyAJ4fqM","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776246,"modifiedTime":1663690776246,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Process Healing (Regen / Fast Healing)","type":"script","author":"oiPWLVPNH7xQBULr","img":"systems/pf2e/icons/spells/regeneration.webp","scope":"global","command":"PF2EPersistentDamage.processHealing(canvas.tokens.controlled);","folder":null,"sort":0,"flags":{"core":{"sourceId":"Compendium.pf2e-persistent-damage.pf2e-persistent-damage-macros.mh3yl3kgkp8onnom"},"cf":{"id":"temp_w4f9l9idxk","path":"GM Macros","color":"#940000"}},"_id":"HuGGbacApqouXSNl","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776248,"modifiedTime":1663690776248,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"StatusCheck","type":"script","author":"oiPWLVPNH7xQBULr","img":"icons/svg/clockwork.svg","scope":"global","command":"// console.log(\"StatusCheck args: \", args)\n\nconst negateRegenEffectName = \"Regeneration Negated\"\n\nif (args[2] == \"delete\" && args[3] == false) {\n\tremoveCondition(args[0], args[1])\n}\n\nif (args[3] == true) {\n\tconst roll = new Roll(args[4]).roll();\n\tlet myToken = canvas.tokens.placeables.find(token => token.id === args[1]);\n\tlet newHealth = myToken.actor.data.data.attributes.hp.value;\n\n\tif (args[0] == \"regeneration\") {\n\t\tlet negateRegenEffect = myToken.actor.items.filter(item => item.type === 'effect' && item.name.includes(negateRegenEffectName));\n\n\t\tif (negateRegenEffect.length == 0) {\n\t\t\tnewHealth += roll.total;\n\t\t\tif (newHealth > myToken.actor.data.data.attributes.hp.max) { newHealth = myToken.actor.data.data.attributes.hp.max }\n\t\t}\n\t} else {\n\t\tnewHealth -= roll.total;\n\t\tif (newHealth < 0) { newHealth = 0 }\n\t}\n\n\tmyToken.actor.update({ 'data.attributes.hp.value': newHealth })\n\t\n\tif (args[0] != \"regeneration\") {\n\t\troll.toMessage({\n\t\t\trollMode: \"GM Roll\"\n\t\t});\n\t}\n}\n\nfunction removeCondition(type, target) {\n\tlet myToken = canvas.tokens.placeables.find(token => token.id === target);\n\tlet delCondition = myToken.actor.data.items.find(i => i.name === type);\n\t// console.log(delCondition)\n\n\tif (type === \"Frightened\" && delCondition.data.value.value > 1) {\n\t\tPF2eConditionManager.updateConditionValue(delCondition._id, myToken, delCondition.data.value.value - 1)\n\t} else {\n\t\tlet promise = new Promise(function (resolve, reject) {\n\t\t\t// the function is executed automatically when the promise is constructed\n\t\t\t// after 1 second signal that the job is done with the result \"done\"\n\t\t\tsetTimeout(() => resolve(PF2eConditionManager.removeConditionFromToken(delCondition._id, myToken)), 1000);\n\t\t})\n\t}\n}","folder":null,"sort":0,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true},"macro-marker":{"activeData":{"icon":"icons/svg/clockwork.svg","tooltip":"StatusCheck                                 ","colour":"#ff0000","trigger":""}},"exportSource":{"world":"age-of-ashes","system":"pf2e","coreVersion":"0.7.9","systemVersion":"1.10.25.2784"},"cf":{"id":"temp_w4f9l9idxk","path":"GM Macros","color":"#940000"}},"_id":"KPRXAQtFwuAAYDiT","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776249,"modifiedTime":1663690776249,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Cast Stoneskin","type":"script","author":"oiPWLVPNH7xQBULr","img":"systems/pf2e/icons/spells/stone-skin.webp","scope":"global","command":"/*************\n *  Globals  *\n**************/\nconst effect = await game.items.find(a => a.id == \"fVPxSwCp4evWPTNf\").toObject(); // Shared Compendium Effect\n\n/************* \n * Functions *\n**************/\nasync function main() {\n\tif (!token?.actor && canvas.tokens.controlled.length != 1) {\n\t\tui.notifications.warn(\"You must have a single actor selected.\");\n\t}\n\n\tlet task = args[0];\n\n\tswitch (task) {\n\t\tcase 'addEffect':\n\t\t\taddEffect(token.actor);\n\t\t\tbreak;\n\t\tcase 'removeEffect':\n\t\t\tremoveEffect(token.actor);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ttoggleEffect(token.actor);\n\t}\n}\n\n\nfunction toggleEffect(tActor) {\n\tlet effectItems = tActor.items.filter(item => item.type === 'effect' && item.name.includes(effect.name));\n\n\tif (effectItems.length > 0) {\n\t\tremoveEffect(tActor);\n\t} else {\n\t\taddEffect(tActor);\n\t}\n}\n\nasync function addEffect(tActor) {\n\tui.notifications.info(`${tActor.name} now has ${effect.name} for ${effect.data.duration.value} ${effect.data.duration.unit}.`);\n\tawait tActor.createEmbeddedDocuments(\"Item\", [effect]);\n\taddTurnAlert(tActor);\n}\n\nasync function removeEffect(tActor) {\n\tlet effectItems = tActor.items.filter(item => item.type === 'effect' && item.name.includes(effect.name));\n\tfor (let effectItem of effectItems) {\n        let newDuration = (effectItem.data.data.duration.value) - 1;\n        if(newDuration <= 0) {\n\t        ui.notifications.info(`${tActor.name}'s ${effect.name} expired.`);\n            await tActor.deleteOwnedItem(effectItem._id);            \n        } else {\n\t        ui.notifications.info(`${tActor.name}'s ${effect.name} now has ${newDuration} minutes left.`);\n            await effectItem.update({'data.duration.value': newDuration})    \n        }\n\t}\n}\n\nfunction addTurnAlert(tActor) {\n\tif (!game.modules.get(\"turnAlert\")?.active || game.combat === null) {\n\t\treturn;\n\t}\n\n\t// Get the combat tracker id for the targeted token...\n\tlet combatant_target = game.combat.combatants.find(it => it.actor.id == tActor.id);\n\n\tif (combatant_target === undefined) {\n\t\tui.notifications.warn(`${tActor.data.name} is not in combat! They must be in combat for this macro to work.`);\n\t\treturn;\n\t}\n\n\t// Check if actor has acted yet or not this round and set Alert to this round if they haven't\n\tconst currentTurn = game.combat.turn;\n\tconst combatantTurn = game.combat.turns.findIndex(it => it.actor.id == tActor.id);\n\tlet nextRound = (combatantTurn > currentTurn) ? 0 : 1;\n\tnextRound += effect.data.duration.value\n\n\tconst removeEffect_Alert = {\n\t\tname: `${effect.name} expires`,\n\t\tlabel: `${effect.name} expires`,\n\t\tturnId: combatant_target._id,\n\t\tround: nextRound,\n\t\t// endOfTurn: true,\n\t\tmacro: \"Cast Stoneskin\",\n\t\targs: ['removeEffect']\n\t}\n\n\tTurnAlert.create(removeEffect_Alert);\n}\n\nmain();","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_9jlc9ozs6qm","path":"Effect Toggles","color":"#9900d1"}},"_id":"LnMuATGBgmHnbbLr","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776250,"modifiedTime":1663690776250,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Stealth For Selected Tokens","type":"script","author":"oiPWLVPNH7xQBULr","img":"systems/pf2e/icons/features/classes/surprice-attack.webp","scope":"global","command":"const tokens = canvas.tokens.controlled.filter((t) => ['character', 'npc', 'familiar'].includes(t.actor.data.type));\n\nif (tokens.length === 0) {\n    ui.notifications.error(`You must select at least one npc/pc token`);\n} else {\n    tokens.map((p) => p.actor).forEach((actor) => actor.data.data.skills.ste.roll(event, ['secret']));\n}","folder":null,"sort":0,"flags":{"core":{"sourceId":"Compendium.pf2e.pf2e-macros.yBuEphSaJJ7V9Yw3"},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_qx20rfr41e","path":"PC Macros","color":"#0068b8"}},"_id":"MclrLi2xwBkCaEGY","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776254,"modifiedTime":1663690776254,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"#[CF_tempEntity]","type":"chat","author":"oiPWLVPNH7xQBULr","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"flags":{"cf":{"id":"temp_w4f9l9idxk","path":"GM Macros","color":"#940000","name":"GM Macros","children":[],"folderPath":[],"fontColor":"#FFFFFF","icon":null,"sorting":"a","contents":["eGmEXGO1nnMjjXMU","8QtlWoC78j0MZU89","RZH5ymLyNSyFPQeQ","FUdlEQuHcYvwCOVX","VyyAfrDJICoLfhdy","HuGGbacApqouXSNl","x84PaWKV26WQZcsz","x0W7ScATL0nBK9FW","kmfuSuMjG4kwyGln","wlMkpgkRmL6CVLFK","KPRXAQtFwuAAYDiT","8WhFAW3e7fKeNztX","PvnIzkCDGxf77jjS"],"version":"2.5.3"}},"_id":"Nk4H4K1Gbps3h7Q1","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776255,"modifiedTime":1663690776255,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"_id":"PLjhtPJATWOM7ccf","name":"Refresh Items from Compendium","type":"script","author":"oiPWLVPNH7xQBULr","img":"modules/game-icons-net/whitetransparent/orb-direction.svg","scope":"global","command":"for (const item of _token.actor.items) {\n    await item.sheet.refreshItemFromCompendium();\n}","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.7RMUa2D1zKreuuw3"},"cf":{"id":"temp_jgmri56d4gm","path":"System Macros","color":"#02ac24"}},"ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776258,"modifiedTime":1663690776258,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Add Persistent Damage","type":"script","author":"oiPWLVPNH7xQBULr","img":"systems/pf2e/icons/features/classes/brutality.webp","scope":"global","command":"PF2EPersistentDamage.showDialog();","folder":null,"sort":0,"flags":{"cf":{"id":"temp_w4f9l9idxk","path":"Macros","color":"#000000"}},"_id":"PvnIzkCDGxf77jjS","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776259,"modifiedTime":1663690776259,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Add Timer","type":"script","author":"oiPWLVPNH7xQBULr","img":"icons/tools/navigation/hourglass-grey.webp","scope":"global","command":"const ITEM_UUID = 'Compendium.Nerps-For-Foundry.shared-items.O72nH1FuDpP6j9Zm'; // Timer: Generic\nconst effect = (await fromUuid(ITEM_UUID)).toObject();\n\ncountdownEffect();\n\nfunction countdownEffect() {\n\tlet template = `\n  <p>\n    Time: <input id=\"countdowninput\" type=\"string\" style=\"width: 50px;\" value=\"1d4\">\n\n\t<select name=\"durationUnit\" id=\"durationUnit\">\n\t\t<option value=\"rounds\" selected>Rounds</option>\n\t\t<option value=\"minutes\">Minutes</option>\n\t\t<option value=\"hours\">Hours</option>\n\t\t<option value=\"days\">Days</option>\n\t</select>\n  </p>\n  <p>\n    Name: <input id=\"countdownname\" type=\"string\" style=\"width: 100px;\" value=\"Countdown\">\n  </p> \n  <p>\n    <input type=\"checkbox\" id=\"cooldown\"/>\n    Cooldown (adds 1 to duration)\n  </p>\n  `;\n\n\tnew Dialog({\n\t\ttitle: \"Countdown Effect\",\n\t\tcontent: template,\n\t\tbuttons: {\n\t\t\tok: {\n\t\t\t\tlabel: \"Apply\",\n\t\t\t\tcallback: (html) => {\n\t\t\t\t\tmain(html);\n\t\t\t\t},\n\t\t\t},\n\t\t\tcancel: {\n\t\t\t\tlabel: \"Cancel\",\n\t\t\t},\n\t\t},\n\t}).render(true);\n}\n\nasync function main(html) {\n\tlet coolDownText = \"\";\n\tlet countdownNumber = \"\";\n\tlet duration = html.find(\"#countdowninput\")[0].value;\n\tlet durationUnit = html.find(\"#durationUnit\")[0].value;\n\tconst isCooldown = html.find(\"#cooldown\")[0].checked;\n\t\n\teffect.name = \"Timer: \" + html.find(\"#countdownname\")[0].value;\n\t\n\tif (duration.includes(\"d\")) {\n\t\tcountdownNumber = new Roll(duration).roll({ async: false }).total;\n\t} else {\n\t\tcountdownNumber = duration;\n\t}\n\t\n\tif (isCooldown) {\n\t\tcountdownNumber = parseInt(countdownNumber) + 1;\n\t\tcoolDownText = \"a cool down \";\n\t};\n\n\tui.notifications.info(`${actor.name} now has ${coolDownText}${effect.name} for ${countdownNumber} ${durationUnit}.`);\n\n\teffect.data.duration.value = countdownNumber;\n\teffect.data.duration.unit = durationUnit;\n\tawait token.actor.createEmbeddedDocuments(\"Item\", [effect]);\n}","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_w4f9l9idxk","path":"GM Macros","color":"#940000"}},"_id":"RZH5ymLyNSyFPQeQ","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776261,"modifiedTime":1663690776261,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"#[CF_tempEntity]","type":"chat","author":"oiPWLVPNH7xQBULr","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"flags":{"cf":{"id":"temp_9jlc9ozs6qm","path":"Effect Toggles","color":"#9900d1","name":"Effect Toggles","children":[],"folderPath":[],"fontColor":"#FFFFFF","icon":null,"sorting":"a","contents":["LnMuATGBgmHnbbLr","8v5DFZsPmOyIIYZy","Weo89jdN2edPoIyG","H4RaawEHGyAJ4fqM"],"version":"2.5.3"}},"_id":"SmxiZ5uqqTR0XE2R","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776262,"modifiedTime":1663690776262,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Exploration Activities","type":"script","author":"oiPWLVPNH7xQBULr","img":"modules/Nerps-For-Foundry/images/Exploration Actions/small/Exploration-Mode.webp","scope":"global","command":"const actors = canvas.tokens.controlled.flatMap((token) => token.actor ?? []);\nif (actors.length === 0 && game.user.character) actors.push(game.user.character);\nif (actors.length === 0) {\n    const message = game.i18n.localize(\"PF2E.ErrorMessage.NoTokenSelected\");\n    return ui.notifications.error(message);\n}\n\nconst ITEM_UUID = \"Compendium.Nerps-For-Foundry.nerps-pf2e-exploration-effects.khJJdnGwdSMIbfY0\"; // Exploration Activities\nconst source = (await fromUuid(ITEM_UUID)).toObject();\nsource.flags = mergeObject(source.flags ?? {}, { core: { sourceId: ITEM_UUID } });\n\nconst ACTIVITIES = [\"Compendium.Nerps-For-Foundry.nerps-pf2e-exploration-effects.N8vpuGy4TzU10y8E\", \"Compendium.Nerps-For-Foundry.nerps-pf2e-exploration-effects.F6vJYLZTWDpnrnCZ\", \"Compendium.Nerps-For-Foundry.nerps-pf2e-exploration-effects.GYOyFj4ziZX060rZ\", \"Compendium.Nerps-For-Foundry.nerps-pf2e-exploration-effects.OjRHL0B4WAUUQc13\", \"Compendium.Nerps-For-Foundry.nerps-pf2e-exploration-effects.V347nnVBGDrVWh7k\", \"Compendium.Nerps-For-Foundry.nerps-pf2e-exploration-effects.vNUrKvoOSvEnqzhM\", \"Compendium.Nerps-For-Foundry.nerps-pf2e-exploration-effects.tDsgl8YmhZbx2May\", \"Compendium.Nerps-For-Foundry.nerps-pf2e-exploration-effects.kh1QdKkvbNZ0qBsQ\", \"Compendium.Nerps-For-Foundry.nerps-pf2e-exploration-effects.mGFBHM1lvHNZ9BsH\", \"Compendium.Nerps-For-Foundry.nerps-pf2e-exploration-effects.XiVLHjg5lQVMX8Fj\", \"Compendium.Nerps-For-Foundry.nerps-pf2e-exploration-effects.OcCXjJab7rSR3mDf\", \"Compendium.Nerps-For-Foundry.nerps-pf2e-exploration-effects.CcyA2CzeaTBWHNHP\", \"Compendium.Nerps-For-Foundry.nerps-pf2e-exploration-effects.dPN9skoOTV4xPXXw\", \"Compendium.Nerps-For-Foundry.nerps-pf2e-exploration-effects.L9pco4KzAgzzsGzJ\", \"Compendium.Nerps-For-Foundry.nerps-pf2e-exploration-effects.IHUDmJwpONRhUmSH\", \"Compendium.Nerps-For-Foundry.nerps-pf2e-exploration-effects.mlRq2R9uZRwP1Nss\", \"Compendium.Nerps-For-Foundry.nerps-pf2e-exploration-effects.5GB5F68cxRPdrF1Q\"];\n\nfor (const actor of actors) {\n     await ACTIVITIES.forEach((activity) => {\n        const activityFound = actor.itemTypes.effect.find((e) => e.data.flags.core?.sourceId === activity);\n   \n        if (activityFound) {\n            console.log(activityFound);\n            activityFound.delete();\n        }\n    });\n\n    const existing = actor.itemTypes.effect.find((e) => e.data.flags.core?.sourceId === ITEM_UUID);\n    if (existing) {\n        await existing.delete();\n    } else {\n        await actor.createEmbeddedDocuments(\"Item\", [source]);\n    }\n}","folder":null,"sort":0,"flags":{"furnace":{"runAsGM":false},"exportSource":{"world":"aoa1","system":"pf2e","coreVersion":"0.7.1","systemVersion":"1.10.2.1717"},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_qx20rfr41e","path":"PC Macros","color":"#0068b8"}},"_id":"UpgJAXrxxI0jxmVW","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776265,"modifiedTime":1663690776265,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Group Saving Throw","type":"script","author":"oiPWLVPNH7xQBULr","img":"icons/sundries/gaming/dice-runed-brown.webp","scope":"global","command":"game.PF2EToolbox.groupSave();","folder":null,"sort":0,"flags":{"core":{"sourceId":"Macro.8Q09qdNv8Ry5v3pF"},"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_w4f9l9idxk","path":"GM Macros","color":"#940000"}},"_id":"VyyAfrDJICoLfhdy","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776268,"modifiedTime":1663690776268,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Spell Effect: Hymn of Healing","type":"script","author":"oiPWLVPNH7xQBULr","img":"icons/svg/heal.svg","scope":"global","command":"async function main() {\n\tconst target = canvas.tokens.placeables.find(target => target.id === args[0]);\n\tconst source = args[1];\n\tconst healAmount = args[2];\n\tconst duration = args[3] - 1;\n\tconst task = args[4];\n\n\tlet combatant_target = game.combat.data.combatants.find(it => it.tokenId == target.id);\n\tif (combatant_target === undefined) {\n\t\tui.notifications.warn(`${target.data.name} is not in combat! They must be in combat for this macro to work.`);\n\t\treturn;\n\t}\n\n\t// Check if actor has acted yet or not this round and set Alert to this round if they haven't\n\tconst currentTurn = game.combat.turn;\n\tconst combatantTurn = game.combat.turns.findIndex(it => it.actor.id == target.actor.id);\n\tlet nextRound = (combatantTurn > currentTurn) ? 0 : 1;\n\n\tconst fastHealing_Alert = {\n\t\tname: `Spell Effect: Hymn of Healing - Fast Healing ${healAmount}`,\n\t\tlabel: `Spell Effect: Hymn of Healing - Fast Healing ${healAmount}`,\n\t\tturnId: combatant_target._id,\n\t\tround: nextRound,\n\t\tmessage: `Fast Healing ${healAmount} applied to ${target.data.name} from Hymn of Healing.`,\n\t\tmacro: \"Spell Effect: Hymn of Healing\",\n\t\targs: [target.id, source, healAmount, duration, 'applyFastHealing']\n\t}\n\n\tconst sustainSpell_Alert = {\n\t\tname: \"Spell Effect: Hymn of Healing - Sustain Spell)\",\n\t\tlabel: \"Spell Effect: Hymn of Healing - Sustain Spell)\",\n\t\tturnId: source,\n\t\tendOfTurn: false,\n\t\tround: 1,\n\t\tmessage: `Temporary Hit Points removed from ${target.data.name} from Hymn of Healing. Sustaining the spell will reapply the effect.`,\n\t\tmacro: \"Spell Effect: Hymn of Healing\",\n\t\targs: [target.id, source, healAmount, duration, 'sustainSpell'],\n\t\tuserId: game.userId,\n\t}\n\n\tswitch (task) {\n\t\tcase 'applyFastHealing':\n\t\t\tlet actorHP = target.actor.data.data.attributes.hp;\n\t\t\tawait target.actor.update({ 'data.attributes.hp.value': actorHP.value + healAmount })\n\t\t\tbreak;\n\t\tcase 'addTempHP':\n\t\t\tlet effectItem = game.items.getName(\"Spell Effect: Hymn of Healing\").data;\n\t\t\t// console.log(\"*********** EFFECT ITEM:\", effectItem);\n\t\t\ttarget.actor.createOwnedItem(effectItem);\n\t\t\tbreak;\n\t\tcase 'sustainSpell':\n\t\t\tNerps.removeEffect(target.actor.id, \"Spell Effect: Hymn of Healing\");\n\n\t\t\tif (duration > 0) {\n\t\t\t\tlet d = Dialog.confirm({\n\t\t\t\t\ttitle: \"Sustain Spell Action Required\",\n\t\t\t\t\tcontent: `<p>Do you wish to sustain Hymn of Healing?</p>${duration} rounds of duration left.`,\n\t\t\t\t\tyes: () => {\n\t\t\t\t\t\tui.notifications.info(\"Hymn of Healing sustained.\");\n\n\t\t\t\t\t\tTurnAlert.create(sustainSpell_Alert);\n\t\t\t\t\t\tTurnAlert.create(fastHealing_Alert);\n\t\t\t\t\t\tNerps.addEffect(target.actor.id, \"Spell Effect: Hymn of Healing\");\n\t\t\t\t\t},\n\t\t\t\t\tno: () => {\n\t\t\t\t\t\tui.notifications.warn(\"Hymn of Healing will expire at end of your turn.\");\n\t\t\t\t\t\t// console.log(\"Hymn of Healing will expire at end of your turn.\")\n\t\t\t\t\t},\n\t\t\t\t\tdefaultYes: true\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tui.notifications.error(\"Hymn of Healing duration has ended and can no longer be sustained.\");\n\t\t\t}\n\t\t\tbreak;;\n\t\tdefault:\n\t\t\tconsole.log(`Unknown task sent to Spell Effect: Hymn of Healing macro.`);\n\t}\n}\n\nmain();","folder":null,"sort":0,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"exportSource":{"world":"age-of-ashes","system":"pf2e","coreVersion":"0.7.9","systemVersion":"1.10.25.2784"},"cf":{"id":"temp_9jlc9ozs6qm","path":"Effect Toggles","color":"#9900d1"}},"_id":"Weo89jdN2edPoIyG","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776273,"modifiedTime":1663690776273,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Import Compendium Mapping","type":"script","author":"oiPWLVPNH7xQBULr","img":"icons/svg/dice-target.svg","scope":"global","command":"// https://gitlab.com/-/snippets/2138719\n\nconst folderName = encodeURL(`${game.system.id}CompendiumMappingBackup`);\n\nasync function getJSON(path){\n  const response = await fetch(path);\n  const json = await response.json();\n  return json;\n}\n\nui.notifications.info(\"Starting import, this may take a few moments.\")\n\nasync function importMapping(gamePack){\n    let filepath = `${folderName}/${gamePack}.json`;\n    let actors = await getJSON(filepath);\n    const updates = actors.map(a => ({_id: a.id, img: a.img, token: { img: a.data.token.img, randomImg: a.data.token.randomImg, scale: a.data.token.scale }}));\n    try {\n        const pack = game.packs.get(gamePack);\n        pack.configure({locked: false})\n        const docs = await pack.getDocuments();\n        const updated = await Actor.updateDocuments(updates, {pack: gamePack});\n        pack.configure({locked: true});\n        ui.notifications.info(`${gamePack} imported`)\n        } catch (error) {\n        console.error(`Could not load data for ${gamePack}.  That pack may not exist in this world or it may be damaged.`)\n    }\n}\n\nconst folderList = await FilePicker.browse('data',folderName);\nconst files = folderList.files.filter(f => f.endsWith('.json'));\nfor (let file of files) {\n    let gamePack = file.split('/').slice(-1)[0].replace('.json','')\n    await importMapping(gamePack);\n}\nui.notifications.info(\"done\")","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_jgmri56d4gm","path":"System Macros","color":"#02ac24"}},"_id":"Xx9TKoCq7Xtd6msQ","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776276,"modifiedTime":1663690776276,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Change Form","type":"script","scope":"global","author":"bvlTPmzDPuQBXfIC","img":"systems/pf2e/icons/spells/shapechange.webp","command":"/** These values must be set for this macro to work */\nconst USER_NAME = \"Noone\";\nconst PREFERRED_FORM = \"DiNoSaur\";\n// https://assets.forge-vtt.com/60905de35c4f48ccbff13f02/tokenizer/Battleforms/Ant.webp\n// 60dc98acb933ab8ab3799d81 == Bob's UUID\nconst BATTLEFORM_IMAGES_PATH = \"https://assets.forge-vtt.com/60dc98acb933ab8ab3799d81/tokenizer/Battleforms/\";\nconst BATTLEFORM_IMAGE_EXTENSION = \".webp\";\nconst BATTLEFORM_IMAGE_DEFAULT = BATTLEFORM_IMAGES_PATH + \"Generic_Battleform.webp\";\n\n/** Form stats: adjust these for different spells */\nconst formGroups = [\n\t// contains Attack info for the forms\n\t{\n\t\tgroup: 'Pest Form', // Doubles as the Feat Name and the Heading under which the form options are displayed in the selection menu\n\t\tclass: 'pestForm', // Used to link to the correct Scaling Attributes group\n\t\tminimumLevel: 1,\n\t\tforms: [\n\t\t\t{\n\t\t\t\tname: 'Pest',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.ydsLEGjY89Akc4oZ',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tgroup: 'Animal Form', // Doubles as the Feat Name and the Heading under which the form options are displayed in the selection menu\n\t\tclass: 'animalForm', // Used to link to the correct Scaling Attributes group\n\t\tminimumLevel: 2,\n\t\tforms: [\n\t\t\t{\n\t\t\t\tname: 'Ape',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.tk3go5Cl6Qt130Dk',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Bear',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.gQnDKDeBTtjwOWAk',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Bull',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.BT1ofB6RvRocQOWO',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Canine',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.sN3mQ7YrPBogEJRn',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Cat',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.ptOqsN5FS0nQh7RW',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Deer',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.F4DTpDXNu5IliyhJ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Frog',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.j2LhQ7kEQhq3J3zZ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Shark',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.qPaEEhczUWCQo6ux',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Snake',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.kz3mlFwb9tV9bFwu',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tgroup: 'Insect Form',\n\t\tclass: 'insectForm',\n\t\tminimumLevel: 3,\n\t\tforms: [\n\t\t\t{\n\t\t\t\tname: 'Ant',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.6IvTWcispcDaw88N',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Beetle',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.amTa9jSml9ioKduN',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Centipede',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.DENMzySYANjUBs4O',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Mantis',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.llrOM8rPP9nxIuEN',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Scorpion',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.bOjuEX3qj7XAOoDF',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Spider',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.782NyomkDHyfsUn6',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tgroup: 'Aerial Form',\n\t\tclass: 'aerialForm',\n\t\tminimumLevel: 4,\n\t\tforms: [\n\t\t\t{\n\t\t\t\tname: 'Bat',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.jvwKRHtOiPAm4uAP',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Bird',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.0QVufU5o3xIxiHmP',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Pterosaur',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.UjoNm3lrhlg4ctAQ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Wasp',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.xgZxYqjDPNtsQ3Qp',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tgroup: 'Dinosaur Form',\n\t\tclass: 'dinosaurForm',\n\t\tminimumLevel: 4,\n\t\tforms: [\n\t\t\t{\n\t\t\t\tname: 'Ankylosaurus',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.0Cyf07wboRp4CmcQ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Brontosaurus',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.KkDRRDuycXwKPa6n',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Deinonychus',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.oJbcmpBSHwmx6FD4',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Stegosaurus',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.T6XnxvsgvvOrpien',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Triceratops',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.iOKhr2El8R6cz6YI',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Tyrannosaurus',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.542Keo6txtq7uvqe',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tgroup: 'Elemental Form',\n\t\tclass: 'elementalForm',\n\t\tminimumLevel: 5,\n\t\tforms: [\n\t\t\t{\n\t\t\t\tname: 'Air',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.DliizYpHcmBG130w',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Earth',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.8eWLR0WCf5258z8X',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Fire',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.phIoucsDa3iplMm2',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Water',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.kxMBdANwCcF841uA',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tgroup: 'Plant Form',\n\t\tclass: 'plantForm',\n\t\tminimumLevel: 5,\n\t\tforms: [\n\t\t\t{\n\t\t\t\tname: 'Arboreal',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.tu8FyCtmL3YYR2jL',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Flytrap',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.JrNHFNxJayevlv2G',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Shambler',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.fIloZhZVH1xTnX4B',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tgroup: 'Dragon Form',\n\t\tclass: 'dragonForm',\n\t\tminimumLevel: 6,\n\t\tforms: [\n\t\t\t{\n\t\t\t\tname: 'Black',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.rHXOZAFBdRXIlxt5',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Blue',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.ETgzIIv3M2zvclAR',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Brass',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.OeCn76SB92GPOZwr',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Bronze',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.jtW3VfI5Kktuy3GH',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Copper',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.DrNpuMj14wVj4bWF',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Gold',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.8aNZhlkzRTRKlKag',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Green',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.nWEx5kpkE8YlBZvy',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Red',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.V4a9pZHNUlddAwTA',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Silver',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.TUyEeLyqdJL6PwbH',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'White',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.H6ndYYYlADWwqVQb',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tgroup: 'Monstrosity Form',\n\t\tclass: 'monstrosityForm',\n\t\tminimumLevel: 8,\n\t\tforms: [\n\t\t\t{\n\t\t\t\tname: 'Phoenix',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.b8bfWIICHOsGVzjp',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Purple Worm',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.rEsgDhunQ5Yx8KZx',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Sea Serpent',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.Eik8Fj8nGo2GLcbn',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tgroup: 'Aberration Form',\n\t\tclass: 'aberrationForm',\n\t\tminimumLevel: 5,\n\t\tforms: [\n\t\t\t{\n\t\t\t\tname: 'Chuul',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.xsy1yaCj0SVsn502',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Gogiteth',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.gKGErrsS1WoAyWub',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Gug',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.sfJyQKmoxSRo6FyP',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Otyugh',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.SjfDoeymtnYKoGUD',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tgroup: 'Angel Form',\n\t\tclass: 'angelForm',\n\t\tminimumLevel: 7,\n\t\tforms: [\n\t\t\t{\n\t\t\t\tname: 'Balisse',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.WEpgIGFwtRb3ef1x',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Choral',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.sccNh8j1PKLHCKh1',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Monadic Deva',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.3vWfew0TIrcGRjLZ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Movanic Deva',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.Bd86oAvK3RLN076H',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tgroup: 'Cosmic Form',\n\t\tclass: 'cosmicForm',\n\t\tminimumLevel: 7,\n\t\tforms: [\n\t\t\t{\n\t\t\t\tname: 'Moon',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.tfdDpf9xSWgQer5g',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Sun',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.2Ss5VblfZNHg1HjN',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tgroup: 'Daemon Form',\n\t\tclass: 'daemonForm',\n\t\tminimumLevel: 6,\n\t\tforms: [\n\t\t\t{\n\t\t\t\tname: 'Ceustodaemon',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.1n84AqLtsdT8I64W',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Leukodaemon',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.ScF0ECWnfXMHYLDL',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Meladaemon',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.zIRnnuj4lARq43DA',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Piscodaemon',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.0W87OkYi3qCwNGSj',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tgroup: 'Demon Form',\n\t\tclass: 'demonForm',\n\t\tminimumLevel: 6,\n\t\tforms: [\n\t\t\t{\n\t\t\t\tname: 'Babau',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.X1kkbRrh4zJuDGjl',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Hezrou',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.sXe7cPazOJbX41GU',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Nabasu',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.hnfQyf05IIa7WPBB',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Vrock',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.20egTKICPMhibqgn',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tgroup: 'Devil Form',\n\t\tclass: 'devilForm',\n\t\tminimumLevel: 6,\n\t\tforms: [\n\t\t\t{\n\t\t\t\tname: 'Barbazu',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.0yy4t4UY1HqrEo70',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Erinys',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.BDMEqBsumguTrMXa',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Osyluth',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.HEbbxKtBzsLhFead',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Sarglagon',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.fKeZDm8kpDFK5HWp',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tgroup: 'Fey Form',\n\t\tclass: 'feyForm',\n\t\tminimumLevel: 4,\n\t\tforms: [\n\t\t\t{\n\t\t\t\tname: 'Dryad',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.c4cIfS2974nUJDPt',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Elananx',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.S75DOLjKaSJGMc0D',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Naiad',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.KcBqo33ekJHxZLHo',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Redcap',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.heAj9paC8ZRh7QEj',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Unicorn',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.DwM5qcFp4JgKhXrY',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tgroup: 'Ooze Form',\n\t\tclass: 'oozeForm',\n\t\tminimumLevel: 3,\n\t\tforms: [\n\t\t\t{\n\t\t\t\tname: 'Black Pudding',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.EKdqKCuyWSkpXpyJ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Gelatinous Cube',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.3zdBGENpmaze1bpq',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Gray Ooze',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.7tfF8ifVvOKNud8t',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Ochre Jelly',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.PpkOZVoHkBZUmddx',\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tgroup: 'Gaseous Form',\n\t\tclass: 'gaseousForm',\n\t\tminimumLevel: 4,\n\t\tforms: [\n\t\t\t{\n\t\t\t\tname: 'Gaseous',\n\t\t\t\tid: 'Compendium.pf2e.spell-effects.sILRkGTwoBywy0BU',\n\t\t\t}\n\t\t],\n\t}\n];\n\n// ------------------------------------------------------------------\n// DECLARE VARIABLES\n//\n\n// Dialog variables\nlet content = '';\nlet levelMin = 1;\n\nconst user = game.users.getName(USER_NAME) ?? game.user;\n\nconst macroActor = user?.character ?? actor;\nconst macroToken = macroActor?.getActiveTokens()[0] ?? token;\nconst validGroups = formGroups.map((group) => group.group.match(/^([a-z]+) Form$/i)[1]);\nconst normalizedPreferredForm = PREFERRED_FORM.toLowerCase().capitalize();\nconst error = !user\n\t? `No user with a name of \"${USER_NAME}\" was found.`\n\t: !macroActor\n\t\t? `User ${user.name} has no assigned character.`\n\t\t: !macroToken\n\t\t\t? `${actor.name} has no token in this scene.`\n\t\t\t: !formGroups.some((group) => group.group === `${normalizedPreferredForm} Form`)\n\t\t\t\t? `Invalid preferred form: ${normalizedPreferredForm}. Valid options: ${validGroups.join(\", \")}`\n\t\t\t\t: null;\nif (error) {\n\tui.notifications.error(error);\n\tthrow Error(error);\n}\n\n// -------------------------------------------------------------------\n// DECLARE FUNCTIONS\n//--------------------------------------------------------------------\n\nfunction runDialog(dialog, height, width) {\n\tif (height) {\n\t\tdialog.options.height = height;\n\t\tdialog.position.height = height;\n\t}\n\tif (width) {\n\t\tdialog.options.width = width;\n\t\tdialog.position.width = width;\n\t}\n\tdialog.render(true);\n}\n\n// -------------------------------------------> Main Transform Function Part 1\n\nasync function chooseSpell(spellName, className) {\n\tlet content2 = `<div style=\"text-align: center\"><div style=\"padding: 2px\"><label for=\"forms\">Choose your form:</label>\n\t\t<select name=\"forms\" id=\"forms\">`;\n\tfor (const formGroup of formGroups) {\n\t\tif (formGroup.group === spellName) {\n\t\t\tformGroup.forms.forEach((form) => {\n\t\t\t\tcontent2 += `<option value=\"${form.name}\" class=\"${formGroup.class}\">${form.name}</option>`;\n\t\t\t});\n\t\t\tlevelMin = formGroup.minimumLevel;\n\t\t}\n\t}\n\tcontent2 += `</select></div>\n\t\t<div style=\"padding: 2px\"><label for=\"level\">What level are you casting at?</label>\n\t\t<select name=\"level\" id=\"level\">`;\n\n\twhile (levelMin <= 10) {\n\t\tconst selected = levelMin === Math.round(macroActor.level / 2) ? ' selected=\"selected\"' : \"\";\n\t\tcontent2 += `<option value=\"${levelMin}\"${selected}>${levelMin++}</option>`;\n\t}\n\n\tcontent2 += `</select></div>`;\n\tcontent2 += `<div style=\"padding: 2px\"><label for=\"imgchange\" style=\"display: inline-block; vertical-align: middle; position:relative\">\n\t\tChange token image?</label>\n\t\t<input type=\"checkbox\" name=\"imgchange\" id=\"imgchange\" checked=\"checked\" style=\"position: relative; vertical-align:middle\"></div></div>`;\n\n\tconst d2 = new Dialog({\n\t\ttitle: 'Choose Form',\n\t\tcontent: content2,\n\t\tbuttons: {\n\t\t\tselect: {\n\t\t\t\ticon: \"<i class='fas fa-hand-sparkles'></i>\",\n\t\t\t\tlabel: 'Transform',\n\t\t\t\tcallback: async (html) => {\n\t\t\t\t\tlet actualForm = html.find('#forms')[0].value;\n\t\t\t\t\tlet castingLevel = parseInt(html.find('#level')[0].value);\n\t\t\t\t\tlet imgChange = html.find('#imgchange')[0].checked;\n\t\t\t\t\tchooseForm(actualForm, castingLevel, imgChange, className);\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t});\n\trunDialog(d2, null, 300);\n}\n\n// ----------------------------> Main Transform Function Part 2\n\nfunction fileExists(url) {\n\tif (url) {\n\t\tvar req = new XMLHttpRequest();\n\t\treq.open('GET', url, false);\n\t\treq.send();\n\t\treturn req.status == 200;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nasync function chooseForm(actualForm, castingLevel, imgChange, className) {\n\tlet formData;\n\tfor (let group of formGroups) {\n\t\tif (group.class === className) {\n\t\t\t// find the class in formGroups that matches the formType from the selected option in the dialog\n\t\t\tformData = group.forms.find((element) => element.name === actualForm);\n\t\t}\n\t}\n\n\tconst ITEM_UUID = formData.id; // Spell Effect of the form\n\t(async () => {\n\t\tconst effect = (await fromUuid(ITEM_UUID)).toObject();\n\t\teffect.flags.core = effect.flags.core ?? {};\n\t\teffect.flags.core.sourceId = ITEM_UUID;\n\t\tif (imgChange) {\n\t\t\tconst origImg = macroToken.data.img;\n\t\t\t// const dotCount = origImg.split('/').length - 1\n\t\t\t// const img = origImg.split('.').slice(0, dotCount).join('.') + formData.name + '.' + origImg.split('.')[dotCount];\n\t\t\tlet imgUrl = BATTLEFORM_IMAGES_PATH + formData.name + BATTLEFORM_IMAGE_EXTENSION;\n\n\t\t\tif (!fileExists(imgUrl)) {\n\t\t\t\tconsole.log(\"Nerps! :: Battleform image Missing, falling back to generic! Couldn't find: \" + imgUrl);\n\t\t\t\timgUrl = BATTLEFORM_IMAGE_DEFAULT;\n\t\t\t}\n\n\t\t\tconst rule = {\n\t\t\t\tkey: 'PF2E.RuleElement.TokenImage',\n\t\t\t\tvalue: imgUrl,\n\t\t\t};\n\t\t\teffect.data.rules.splice(effect.data.rules.length - 1, 0, rule);\n\t\t}\n\t\t\n\t\teffect.data.level.value = castingLevel;\n\t\tawait macroActor.createEmbeddedDocuments(\"Item\", [effect]);\n\t})();\n}\n\n// --------------------------------------------------------------------------\n// INIT\n// --------------------------------------------------------------------------\n\nconst existing = macroActor.itemTypes.effect.find((effect) => effect.slug?.match(/^spell-effect-.+-form\\b.*$/));\nif (existing) return existing.delete();\n\n// Populate dropdown with all Form Spells\ncontent += `<div style=\"text-align: center; padding: 0 0 10px\"><label for=\"spells\">What spell are you casting?</label>\n\t<div style=\"padding: 5px 0 0\"><select name=\"spells\" id=\"spells\">`;\nfor (const formGroup of formGroups) {\n\tconst selected = formGroup.group === `${normalizedPreferredForm} Form` ? ' selected=\"selected\"' : \"\";\n\tcontent += `<option value=\"${formGroup.group}\" class=\"${formGroup.class}\"${selected}>${formGroup.group}</option>`;\n}\ncontent += `</select></div></div>`;\n\nconst dialog = new Dialog({\n\ttitle: 'Choose Spell',\n\tcontent: content,\n\tbuttons: {\n\t\tspell: {\n\t\t\ticon: \"<i class='fas fa-arrow-right'></i>\",\n\t\t\tlabel: 'Next',\n\t\t\tcallback: (html) => {\n\t\t\t\tlet spell = html.find('#spells')[0].value;\n\t\t\t\tlet selected = html.find('#spells')[0].selectedIndex;\n\t\t\t\tlet className = html.find('#spells')[0].options[selected].className;\n\t\t\t\tchooseSpell(spell, className);\n\t\t\t},\n\t\t},\n\t},\n});\n\nrunDialog(dialog, null, 250);","ownership":{"default":0,"bvlTPmzDPuQBXfIC":3},"flags":{"advanced-macros":{"runAsGM":false},"exportSource":{"world":"age-of-ashes","system":"pf2e","coreVersion":"10.287","systemVersion":"4.3.4"},"core":{"sourceId":"Macro.QOH0OilaRmpsb7R7"},"cf":{"id":"temp_qx20rfr41e"}},"_stats":{"systemId":"pf2e","systemVersion":"4.3.4","coreVersion":"10.288","createdTime":1668286428394,"modifiedTime":1668286431485,"lastModifiedBy":"bvlTPmzDPuQBXfIC"},"folder":null,"sort":0,"_id":"amP7mbLcThw8GA8V"}
{"name":"#[CF_tempEntity]","type":"chat","author":"oiPWLVPNH7xQBULr","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"flags":{"cf":{"id":"temp_qx20rfr41e","path":"PC Macros","color":"#0068b8","name":"PC Macros","children":[],"folderPath":[],"fontColor":"#FFFFFF","icon":null,"sorting":"a","contents":["v5M5v55uHkYOEY1b","UpgJAXrxxI0jxmVW","80MTSdYXp9gNyh8R","iBFHsbO9koZQWVLJ","6AIWFBOQYpdrLqYR","6vaZrU3P6os1DLRJ","ouoOWgFlfpWmpkOl","rKUvXQS5vwnu9xmB","DVnriSL2cKJE7RHL","5f4TMts2kOCUYVvc","jHk5QZkxCETE3Df8","MclrLi2xwBkCaEGY","amP7mbLcThw8GA8V","hyB0DNIsTCEC3G6s","3TH4hHUCb9BTRlnY"],"version":"2.5.3"}},"_id":"cSIwkCxnVUska1H1","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.6.5","coreVersion":"10.291","createdTime":1663690776284,"modifiedTime":1673453296656,"lastModifiedBy":"HtV4112V3gD3WzYc"}}
{"name":"Add Breath Weapon Delay","type":"script","author":"oiPWLVPNH7xQBULr","img":"icons/magic/fire/blast-jet-stream-embers-orange.webp","scope":"global","command":"/*************\n *  Globals  *\n**************/\nconst effect = await game.items.find(a => a.id == \"soTXke2nVQHnEtBk\").toObject(); // Shared Compendium Effect\nconst numberOfRounds = Math.floor(Math.random() * 4) + 1;\neffect.data.duration.value = numberOfRounds;\n\n/************* \n * Functions *\n**************/\nasync function main() {\n\tif (!token?.actor && canvas.tokens.controlled.length != 1) {\n\t\tui.notifications.warn(\"You must have a single actor selected.\");\n\t}\n\n\tlet task = args[0];\n\n\tswitch (task) {\n\t\tcase 'addEffect':\n\t\t\taddEffect(token.actor);\n\t\t\tbreak;\n\t\tcase 'removeEffect':\n\t\t\tremoveEffect(token.actor);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ttoggleEffect(token.actor);\n\t}\n}\n\nfunction toggleEffect(tActor) {\n\tlet effectItems = tActor.items.filter(item => item.type === 'effect' && item.name.includes(effect.name));\n\n\tif (effectItems.length > 0) {\n\t\tremoveEffect(tActor);\n\t} else {\n\t\taddEffect(tActor);\n\t}\n}\n\nasync function removeEffect(tActor) {\n\tui.notifications.info(`${tActor.name}'s ${effect.name} expired.`);\n\n\tlet effectItems = tActor.items.filter(item => item.type === 'effect' && item.name.includes(effect.name));\n\tfor (let effectItem of effectItems) {\n\t\tawait tActor.deleteOwnedItem(effectItem._id);\n\t}\n}\n\nasync function addEffect(tActor) {\n\tui.notifications.info(`${tActor.name} now has ${effect.name} for ${numberOfRounds} ${effect.data.duration.unit}.`);\n\tawait tActor.createEmbeddedDocuments(\"Item\", [effect]);\n\taddTurnAlert(tActor);\n}\n\nfunction addTurnAlert(tActor) {\n\tif (!game.modules.get(\"turnAlert\")?.active || game.combat === null) {\n\t\treturn;\n\t}\n\n\t// Get the combat tracker id for the targeted token...\n\tlet combatant_target = game.combat.combatants.find(it => it.tActor.id == tActor.id);\n\n\tif (combatant_target === undefined) {\n\t\tui.notifications.warn(`${tActor.data.name} is not in combat! They must be in combat for this macro to work.`);\n\t\treturn;\n\t}\n\n\t// Check if actor has acted yet or not this round and set Alert to this round if they haven't\n\tconst currentTurn = game.combat.turn;\n\tconst combatantTurn = game.combat.turns.findIndex(it => it.tActor.id == tActor.id);\n\tlet nextRound = (combatantTurn > currentTurn) ? 0 : 1;\n\tnextRound += numberOfRounds\n\n\tconst removeEffect_Alert = {\n\t\tname: `${effect.name} expires`,\n\t\tlabel: `${effect.name} expires`,\n\t\tturnId: combatant_target._id,\n\t\tround: nextRound,\n\t\t// endOfTurn: true,\n\t\tmacro: \"Add Breath Weapon Delay\",\n\t\targs: ['removeEffect']\n\t}\n\n\tTurnAlert.create(removeEffect_Alert);\n}\n\nmain();","folder":null,"sort":0,"flags":{"combat-utility-belt":{"macroTrigger":""},"exportSource":{"world":"age-of-ashes","system":"pf2e","coreVersion":"0.7.9","systemVersion":"1.10.25.2784"},"macro-marker":{"activeData":{"icon":"icons/svg/mage-shield.svg","tooltip":"Cast Shield   ","colour":"#ff0000","trigger":""}},"furnace":{"runAsGM":false},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_w4f9l9idxk","path":"GM Macros","color":"#940000"}},"_id":"eGmEXGO1nnMjjXMU","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776285,"modifiedTime":1663690776285,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Delete all Macros","type":"script","author":"oiPWLVPNH7xQBULr","img":"icons/svg/combat.svg","scope":"global","command":"// game.macros.foreach(async (m) => await m.delete(););","folder":null,"sort":0,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_jgmri56d4gm","path":"System Macros","color":"#02ac24"}},"_id":"hKLLZFWeOt7kAAWC","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776287,"modifiedTime":1663690776287,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"#[CF_tempEntity]","type":"chat","author":"oiPWLVPNH7xQBULr","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"flags":{"cf":{"id":"temp_5lpecs4iq07","path":"Under Construction","color":"#e68600","name":"Under Construction","children":[],"folderPath":[],"fontColor":"#FFFFFF","icon":null,"sorting":"a","contents":["yQjEBK2I3dFLwpfL","7STMzn2JQtwr0y3x"],"version":"2.5.3"}},"_id":"hfU9zOomRJvEDOh1","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.1.1","coreVersion":"10.286","createdTime":1663690776288,"modifiedTime":1663802020433,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Adjust Shield HP","type":"script","scope":"global","author":"UuTSTLlcnPmW5OOr","img":"icons/skills/melee/shield-damaged-broken-brown.webp","command":"const targets = game.user.targets;\nlet shieldActor = actor;\n\nif (targets.size > 0) {\n\tshieldActor = targets.first().actor;\n} else {\n\tshieldActor = actor;\n}\n\nif (!shieldActor) {\n\tui.notifications.warn(\"You must have an actor selected.\");\n} else {\n\tconst shieldEquipped = shieldActor.items.find(item => item.id == shieldActor.heldShield._id);\n\n\tconst isReforgingShield = shieldEquipped.name == \"Reforging Shield\" ? true : false;\n\tlet repairSuccessTotal = 22222;\n\tconst hasReforgingShield = isReforgingShield ? `<p><i>Reforging Shield: double HP included</i></p>` : \"\";\n\n\tconst shieldInfo = `${shieldEquipped.name}`;\n\n\tconst dialogContent = `Damage: <input id=\"damageId\" type=\"text\" autofocus />`;\n\n\tnew Dialog({\n\t\ttitle: `Adjust ${shieldEquipped.name} HP`,\n\t\tcontent: dialogContent,\n\t\tbuttons: {\n\t\t\tdoItButton: {\n\t\t\t\tlabel: \"Damage It!\",\n\t\t\t\tcallback: (html) => adjustShield(html, shieldEquipped),\n\t\t\t\ticon: `<i class=\"fas fa-check\"></i>`\n\t\t\t},\n\t\t\tcancelButton: {\n\t\t\t\tlabel: \"Cancel\",\n\t\t\t\ticon: `<i class=\"fas fa-cancel\"></i>`\n\t\t\t}\n\t\t},\n\t\tdefault: \"doItButton\"\n\t}).render(true);\n}\n\nasync function adjustShield(html, shieldEquipped) {\n\tconst damageDone = html.find(\"input#damageId\").val();\n\tconst newShieldHp = Math.max(0, shieldEquipped.system.hp.value - damageDone);\n\tconst shieldUpdate = { \"system.hp.value\": newShieldHp };\n\n\tawait shieldEquipped.update(shieldUpdate);\n\n\tui.notifications.info(`${shieldEquipped.name} now has ${newShieldHp} HP.`);\n}","ownership":{"default":2,"UuTSTLlcnPmW5OOr":3},"flags":{"core":{"sourceId":"Macro.pOrdjKw6Q946Zhjz"},"cf":{"id":"temp_qx20rfr41e"}},"_stats":{"systemId":"pf2e","systemVersion":"4.5.1","coreVersion":"10.291","createdTime":1671570854447,"modifiedTime":1671573300329,"lastModifiedBy":"UuTSTLlcnPmW5OOr"},"folder":null,"sort":0,"_id":"hyB0DNIsTCEC3G6s"}
{"name":"Flat Check","type":"chat","author":"oiPWLVPNH7xQBULr","img":"icons/vtt-512.png","scope":"global","command":"/r 1d20#Rolling a Flat Check...","folder":null,"sort":0,"flags":{"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_qx20rfr41e","path":"PC Macros","color":"#0068b8"}},"_id":"iBFHsbO9koZQWVLJ","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776289,"modifiedTime":1663690776289,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Secret Skill Roll","type":"script","author":"oiPWLVPNH7xQBULr","img":"modules/game-icons-net/whitetransparent/blindfold.svg","scope":"global","command":"// Makes an always-secret roll with a skill using the selected token, or the configured character if none are selected\n// Make a roll with a dialog to choose the skill\ngame.PF2EToolbox.secretSkillRoll()\n\n// Roll acrobatics\n// game.PF2EToolbox.secretSkillRoll('acr')\n\n// Roll perception\n// game.PF2EToolbox.secretSkillRoll('perception')\n\n// Show available skills for the selected token\n// game.PF2EToolbox.secretSkillRoll('give me the skills!')","folder":null,"sort":0,"flags":{"exportSource":{"world":"age-of-ashes","system":"pf2e","coreVersion":"0.7.9","systemVersion":"1.10.25.2784"},"cf":{"id":"temp_qx20rfr41e","path":"PC Macros","color":"#0068b8"}},"_id":"jHk5QZkxCETE3Df8","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776290,"modifiedTime":1663690776290,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"#[CF_tempEntity]","type":"chat","author":"oiPWLVPNH7xQBULr","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"flags":{"cf":{"id":"temp_jgmri56d4gm","path":"System Macros","color":"#02ac24","name":"System Macros","children":[],"folderPath":[],"fontColor":"#FFFFFF","icon":null,"sorting":"a","contents":["hKLLZFWeOt7kAAWC","xEWrtwcCZEJ5Y3UH","Xx9TKoCq7Xtd6msQ","PLjhtPJATWOM7ccf"],"version":"2.5.3"}},"_id":"k7CQp18S8E1rH9gQ","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776292,"modifiedTime":1663690776292,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Set Token bars and nameplate","type":"script","author":"oiPWLVPNH7xQBULr","img":"modules/game-icons-net/whitetransparent/network-bars.svg","scope":"global","command":"/* This will set every token in scene to always display their\n * token bars and nameplate, and sets the first bar to represent \n * HP and removes the second token bar.\n*/\n\nconst tokens = canvas.tokens.placeables.map(token => {\n   return {\n       _id: token.id,\n       \"bar1.attribute\": \"attributes.hp\",\n       \"bar2.attribute\": \"\",\n       \"displayName\": CONST.TOKEN_DISPLAY_MODES.OWNER_HOVER,\n       \"displayBars\": CONST.TOKEN_DISPLAY_MODES.ALWAYS\n   };\n});\n\ncanvas.scene.updateEmbeddedEntity('Token', tokens)","folder":null,"sort":0,"flags":{"combat-utility-belt":{"macroTrigger":""},"cf":{"id":"temp_w4f9l9idxk","path":"GM Macros","color":"#940000"}},"_id":"kmfuSuMjG4kwyGln","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776294,"modifiedTime":1663690776294,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Open Compendium Browser","type":"script","author":"oiPWLVPNH7xQBULr","img":"systems/pf2e/icons/equipment/adventuring-gear/advanced-book-of-translation.webp","scope":"global","command":"game.pf2e.compendiumBrowser.render(true);","folder":null,"sort":0,"flags":{"core":{"sourceId":"Compendium.pf2e.pf2e-macros.s2sa8lo9dcIA6UGe"},"cf":{"id":"temp_qx20rfr41e","path":"PC Macros","color":"#0068b8"}},"_id":"ouoOWgFlfpWmpkOl","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776296,"modifiedTime":1663690776296,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Repair Targets Shield","type":"script","author":"oiPWLVPNH7xQBULr","img":"modules/Nerps-For-Foundry/images/rpg-icons/ResourcesAndCrafting/Tools/en_craft_31.webp","scope":"global","command":"const targets = game.user.targets;\nlet shieldActor = actor;\n\nif (targets.size > 0) {\n\tshieldActor = targets.first().actor;\n} else {\n\tshieldActor = actor;\n}\n\nif (!shieldActor) {\n\tui.notifications.warn(\"You must have an actor selected.\");\n} else {\n\tconst skillName = \"Craft\";\n\tconst skillKey = \"cra\";\n\tconst actionSlug = \"repair\"\n\tconst actionName = \"Repair\"\n\n\tconst modifiers = []\n\t// list custom modifiers for a single roll here\n\t// const modifiers = [new game.pf2e.Modifier('Repair Kit (Superb)', 1, 'item')];\n\n\tconst dcByLevel = [14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 40, 42, 44, 46, 48, 50];\n\tconst shieldEquipped = shieldActor.items.find(item => item.id == shieldActor.heldShield._id);\n\tconst DC = dcByLevel[shieldEquipped.level];\n\tconst skillRank = token.actor.system.skills[skillKey].rank\n\n    const isReforgingShield = shieldEquipped.name == \"Reforging Shield\" ? true : false;\n    let repairSuccessTotal = 5 + (CheckForCraftersEyePiece() ? (skillRank * 10) : (skillRank * 5));\n    repairSuccessTotal = isReforgingShield ? repairSuccessTotal * 2: repairSuccessTotal;\n  \t\n  \tconst hasGreaterCraftersEyepiece = CheckForEquipment(\"crafters-eyepiece-greater\") ? ' (Greater)' : \"\";\n  \tconst hasCraftersEyepiece = CheckForCraftersEyePiece() ? `<p><i>Crafter's Eyepiece${hasGreaterCraftersEyepiece}: +${skillRank * 5} HP included</i></p>` : \"\";\n  \tconst hasReforgingShield = isReforgingShield ? `<p><i>Reforging Shield: double HP included</i></p>` : \"\";\n  \t\n//\tif(shieldEquipped.name == \"Reforging Shield\") {\n//\t    repairSuccessTotal = repairSuccessTotal * 2;\n//\t}\n  \t\n  \tconst shieldInfo = `${shieldEquipped.name}<br />Level: ${shieldEquipped.level}`;\n\n\tconst notes = [...token.actor.system.skills[skillKey].notes]; // add more notes if necessary\n\tconst options = token.actor.getRollOptions(['all', 'skill-check', skillName.toLowerCase()]);\n\toptions.push(`action:${actionSlug}`); // add more traits here in new lines\n\tgame.pf2e.Check.roll(\n\t\tnew game.pf2e.CheckModifier(\n\t\t\t`<span class=\"pf2-icon\">A</span> <b>${actionName}</b> - <p class=\"compact-text\">${skillName} Skill Check</p><p>${shieldInfo}</p><p class=\"compact-text\"><i>Repairs <b>${repairSuccessTotal} HP</b> on success, <b>${repairSuccessTotal * 2} HP</b> on Critical Success, and deals 2d6 damage on Critical Fail.</i></p>${hasCraftersEyepiece}${hasReforgingShield}`,\n\t\t\ttoken.actor.system.skills[skillKey], modifiers),\n\t\t{ actor: token.actor, type: 'skill-check', options, notes, dc: { value: DC } },\n\t\tevent\n\t\t, (Roll) => { repairShield(Roll, repairSuccessTotal, shieldEquipped); } // for callback\n\t);\n}\n\nfunction CheckForCraftersEyePiece() {\n\treturn CheckForEquipment(\"crafters-eyepiece\") || CheckForEquipment(\"crafters-eyepiece-greater\");\n}\n\nfunction CheckForEquipment(slug) {\n\tif (token.actor.items.find(\n\t\t(i) => i.system.slug === slug && i.type === 'equipment' && i.isInvested === true)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nasync function repairShield(RollResult, repairSuccessTotal, shieldEquipped) {\n\tlet damageDone = 0;\n\n\tif (RollResult.options.degreeOfSuccess == 0) {\n\t\tlet r = new Roll(\"2d6\");\n\t\tdamageDone = r.roll({ async: false }).total * -1;\n\t\tgame.dice3d.showForRoll(r);\n\t}\n\n\tconst hpRestored = RollResult.options.degreeOfSuccess > 0 ? (RollResult.options.degreeOfSuccess - 1) * repairSuccessTotal : damageDone;\n\tconst newShieldHp = Math.max(0, Math.min(shieldEquipped.system.hp.max, shieldEquipped.system.hp.value + hpRestored));\n\tconst shieldUpdate = { \"system.hp.value\": newShieldHp };\n\n\tawait shieldEquipped.update(shieldUpdate);\n}","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_qx20rfr41e","path":"PC Macros","color":"#0068b8"}},"_id":"rKUvXQS5vwnu9xmB","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.5.1","coreVersion":"10.291","createdTime":1663690776298,"modifiedTime":1671572023425,"lastModifiedBy":"UuTSTLlcnPmW5OOr"}}
{"name":"Add Treat Wounds Immunity Timer","type":"script","author":"oiPWLVPNH7xQBULr","img":"icons/svg/clockwork.svg","scope":"global","command":"// Apply to selected token\nawait applyTreatWoundsImmunity(actor, false)\n\n// if (game.modules.get(\"combat-utility-belt\")?.active) {}\n\n// Check for an Effect from an actor\nfunction hasTreatWoundsImmunity(treatedActor) {\n\treturn Boolean(treatedActor.items.find(item => item.type === 'effect' && item.name.includes(\"Timer: Treat Wounds Immunity\")));\n}\n\nasync function applyTreatWoundsImmunity(treatedActor, useContinualRecovery = false) {\n\tconst treatedActorName = treatedActor.data.name;\n\t// const continualRecovery = actor.itemTypes.feat.some(i => i.data.name.startsWith('Continual Recovery'));\n\tlet immunityTimer = { seconds: 10 }\n\n\t// console.log(`${treatedActorName} hasTreatWoundsImmunity()? ` + hasTreatWoundsImmunity(treatedActor))\n\n\tif (!hasTreatWoundsImmunity(treatedActor)) {\n\t\timmunityTimer = { hours: 1 }\n\t\tlet timeDescription = \" for 1 hour.\"\n\n\t\tif (useContinualRecovery) {\n\t\t\timmunityTimer = { minutes: 10 }\n\t\t\ttimeDescription = \" for 10 minutes.\"\n\t\t}\n\n\t\tlet reminderID = game.Gametime.reminderIn(immunityTimer, `${treatedActorName} is no longer immune to Treat Wounds.`);\n\t\tconsole.log(`reminderID: ${reminderID}`);\n\n\t\tlet macroTimer = game.Gametime.doIn(immunityTimer, () => removeTreatWoundsImmunity(treatedActor))\n\t\tconsole.log(`macroTimer: ${reminderID}`);\n\n\t\tlet effect = game.items.getName(\"Timer: Treat Wounds Immunity\").data\n\t\tlet originalText = effect.data.description.value\n\t\tlet doc = new DOMParser().parseFromString(originalText, \"text/html\");\n\n\t\teffect.data.description.value = \"<p>\" + doc.body.innerText + timeDescription + \"</p>\"\n\n\t\tawait treatedActor.createOwnedItem(effect)\n\t\teffect.data.description.value = originalText\n\n\t\tui.notifications.warn(`Target is now immune to Treat Wounds${timeDescription}`);\n\t} else {\n\t\tui.notifications.warn(\"Target is already immune to Treat Wounds.\");\n\t}\n\n\treturn immunityTimer\n}\n\n// Remove an Effect from an actor\nasync function removeTreatWoundsImmunity(treatedActor) {\n\tlet hasTreatWoundsImmunity = treatedActor.items.find(item => item.type === 'effect' && item.name.includes(\"Timer: Treat Wounds Immunity\"));\n\n\tif (hasTreatWoundsImmunity) {\n\t\tconsole.log(hasTreatWoundsImmunity);\n\t\thasTreatWoundsImmunity.delete();\n\t\treturn true\n\t}\n\n\treturn false\n}","folder":null,"sort":0,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true},"exportSource":{"world":"age-of-ashes","system":"pf2e","coreVersion":"0.7.9","systemVersion":"1.10.25.2784"},"cf":{"id":"temp_qx20rfr41e","path":"PC Macros","color":"#0068b8"}},"_id":"v5M5v55uHkYOEY1b","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776299,"modifiedTime":1663690776299,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Show GM Screen","type":"script","author":"oiPWLVPNH7xQBULr","img":"stuff/Gm_Screen.jpg","scope":"global","command":"let journal = game.journal.getName(\"!GM Screen\");\n\nif (journal.sheet.rendered) \n\n  journal.sheet.close();\n\nelse\n\n  journal.sheet.render(true)","folder":null,"sort":0,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"cf":{"id":"temp_w4f9l9idxk","path":"GM Macros","color":"#940000"}},"_id":"wlMkpgkRmL6CVLFK","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776300,"modifiedTime":1663690776300,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Roll Secret Perception Checks","type":"script","author":"oiPWLVPNH7xQBULr","img":"icons/magic/perception/eye-ringed-green.webp","scope":"global","command":"// TODO: Add option to select DC by level or default to PC APL?\nconst GM_NAME = \"Gamemaster\"\n\nlet DCbyLevel = [14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 40, 42, 44, 46, 48, 50]\nlet pcLevels = 0;\n\nconst ownedTokens = canvas.tokens.ownedTokens\n            .filter(t => t.actor.hasPlayerOwner)\n            .filter(t => t.actor.type == \"character\")\n\nownedTokens.forEach(token => pcLevels = pcLevels + token.actor.level);\n\nconst apl = Math.round(pcLevels / ownedTokens.length);\nconst partyLvlDC = DCbyLevel[apl]\n\n// TODO: Add PC Stealth DC's if rolling for NPC?\n\nasync function postSave($html) {\n    const DC = parseInt($html.find('[name=\"dc\"]')[0].value) || 0;\n    // const traits = $html.find('[name=\"traits\"]')[0].value || '';\n    // const flavor = $html.find('[name=\"flavor\"]')[0].value || '';\n    \n\tconst SEARCH_UUID = \"Compendium.Nerps-For-Foundry.nerps-pf2e-exploration-effects.XiVLHjg5lQVMX8Fj\"; // Search\n\n    let dcText = '';\n    if(DC > 0) {\n        dcText = `<b>DC ${DC}</b> `\n    }\n\n\n    let tokenList = canvas.tokens.controlled\n        .filter(t => t.actor.hasPlayerOwner)\n        .filter(t => t.actor.type == \"character\");\n\t\tconsole.log(\"TEST\", canvas.tokens)\n    let messageContent = `<p>Rolling Secret ${dcText}Perception checks for selected PC's.</p><hr><p>${tokenList.map(t => \" \" + t.actor.name)}</p>`;\n    \n    // OK, you didn't select any PC tokens, lets check for NPC's only?\n    if(tokenList.length == 0) {\n        tokenList = canvas.tokens.controlled\n            .filter(t => t.actor.type == \"npc\");\n        messageContent = `<p>Rolling Secret ${dcText}Perception checks for selected NPC's.</p><hr><p>${tokenList.map(t => \" \" + t.actor.name)}</p>`;\n    }\n    \n    \n    // Ok, you didn't select any tokens so I assume you want all PC's that are \"Searching\"\n    if(tokenList.length == 0) {\n        tokenList = canvas.tokens.ownedTokens\n            .filter(t => t.actor.hasPlayerOwner)\n            .filter(t => t.actor.type == \"character\")\n            .filter(t => t.actor.itemTypes.effect.find((e) => e.flags.core?.sourceId === SEARCH_UUID));\n    \n        messageContent = `<p>Rolling Secret ${dcText}Perception checks for PC's using the @Compendium[pf2e.actionspf2e.TiNDYUGlMmxzxBYU]{Search} Exploration Activity.</p><hr><p>${tokenList.map(t => \" \" + t.actor.name)}</p>`;\n    }\n    \n    // OK, so there are NO PC's searching, I assume you aren't doing exploration mode\n    // OR your party is really dumb and has NO BODY keeping an eye out? Which in that case, why\n    // roll perception? Ok, maybe you have your reasons, here, I'll roll for ALL PC's then...\n    if(tokenList.length == 0) {\n        tokenList = canvas.tokens.ownedTokens\n            .filter(t => t.actor.hasPlayerOwner)\n            .filter(t => t.actor.type == \"character\");\n    \n        messageContent = `<p>Rolling Secret ${dcText}Perception checks for all PC's.</p><hr><p>${tokenList.map(t => \" \" + t.actor.name)}</p>`;\n    }\n    \n    // create the message and output to chat\n    if (messageContent !== '') {\n\t    let chatData = {\n\t\t    blind: true,\n\t\t    user: game.user._id,\n\t\t    speaker: ChatMessage.getSpeaker(game.user.name),\n\t\t    whisper: ChatMessage.getWhisperRecipients(game.user.name),\n\t\t    content: messageContent,\n\t    };\n\t    ChatMessage.create(chatData, {});\n\t    console.log(\"NERPS: ChatData::\");\n\t    console.log(chatData);\n    }\n    \n    for (let token of tokenList) {\n        const tokenActor = token.actor\n \n        if(DC > 0) {\n            await tokenActor.perception.roll({ dc: {value: DC}, traits: [\"secret\"] });\n        } else {\n            await tokenActor.perception.roll({ traits: [\"secret\"] });\n        }\n    }\n}\n\nconst dialog = new Dialog({\n    title: 'Set Perception DC',\n    content: `\n        <form>\n        <div class=\"form-group\">\n            <label>DC: (APL DC ${partyLvlDC})</label>\n            <input id=\"dc\" name=\"dc\" type=\"number\" autofocus/>\n        </div>\n        `\n        ,\n    buttons: {\n        yes: {\n            label: 'Roll Perception Checks',\n            callback: postSave,\n        },\n        no: {\n            label: 'Cancel',\n        },\n    },\n    default: 'yes',\n    render: html => html.find('#dc').focus()\n});\n\ndialog.render(true);","folder":null,"sort":0,"flags":{"exportSource":{"world":"age-of-ashes","system":"pf2e","coreVersion":"0.7.9","systemVersion":"1.10.25.2784"},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_w4f9l9idxk","path":"GM Macros","color":"#940000"}},"_id":"x0W7ScATL0nBK9FW","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.4.2","coreVersion":"10.291","createdTime":1663690776301,"modifiedTime":1670873308505,"lastModifiedBy":"WtoVEYSz3jgVEWxB"}}
{"name":"Process Persistent Damage","type":"script","author":"oiPWLVPNH7xQBULr","img":"systems/pf2e/icons/conditions/persistent-damage.webp","scope":"global","command":"PF2EPersistentDamage.processPersistentDamage(canvas.tokens.controlled);","folder":null,"sort":0,"flags":{"cf":{"id":"temp_w4f9l9idxk","path":"GM Macros","color":"#940000"}},"_id":"x84PaWKV26WQZcsz","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776302,"modifiedTime":1663690776302,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Export Compendium Mapping","type":"script","author":"oiPWLVPNH7xQBULr","img":"icons/svg/dice-target.svg","scope":"global","command":"// https://gitlab.com/-/snippets/2138719\n\nconst folderName = encodeURL(`${game.system.id}CompendiumMappingBackup`)\n\ntry {\n    FilePicker.createDirectory('data', folderName, {});\n} catch (error) { return\n}\n\nui.notifications.info(\"Starting export, this may take a few moments.\")\n\nasync function exportMapping(gamePack){\n    const pack = game.packs.get(gamePack);\n    const actors = await pack.getDocuments();\n    const mappedImages = actors.map(a => ({id: a.id, img: a.img, data: { token:{ img: a.data.token.img, randomImg: a.data.token.randomImg, scale: a.data.token.scale}}}));\n    const fileName = encodeURI(`${gamePack}.json`);\n    const file = new File([JSON.stringify(mappedImages, null, '')], fileName, { type: 'application/json'});\n    await FilePicker.upload('data', folderName, file)\n}\n\nconst gamePacks = game.packs.filter(entry => entry.documentName === \"Actor\")\n\nfor (let pack of gamePacks) {\n    let gamePack = pack.collection;\n\n    await exportMapping(gamePack);\n}\n\nui.notifications.info(\"done\")","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_jgmri56d4gm","path":"System Macros","color":"#02ac24"}},"_id":"xEWrtwcCZEJ5Y3UH","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776304,"modifiedTime":1663690776304,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
{"name":"Reset Path","type":"script","author":"oiPWLVPNH7xQBULr","img":"icons/svg/dice-target.svg","scope":"global","command":"const combat = game.combats.active;\nconst combatant = combat.turns[combat.turn];\nconst flags = {trackedRound: 0, rulerState: null};\nimport(\"/modules/drag-ruler/src/socket.js\").then(module => module.updateCombatantDragRulerFlags(combat, combatant, flags));","folder":null,"sort":0,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_5lpecs4iq07","path":"Under Construction","color":"#e68600"}},"_id":"yQjEBK2I3dFLwpfL","ownership":{"default":0,"oiPWLVPNH7xQBULr":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":1663690776305,"modifiedTime":1663690776305,"lastModifiedBy":"bvlTPmzDPuQBXfIC"}}
